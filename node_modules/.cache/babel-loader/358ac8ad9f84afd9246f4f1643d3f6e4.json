{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\New folder (2)\\\\kanban-board-main\\\\src\\\\components\\\\kanban-board\\\\index.js\";\nimport React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst KanbanBoard = () => {\n  // Each task is uniquely identified by its name. \n  // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n  const [inputTask, setInputTask] = useState(\"\");\n  const [tasks, setTasks] = useState([{\n    name: '1',\n    stage: 0\n  }, {\n    name: '2',\n    stage: 0\n  }]);\n  const stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Done'];\n  let stagesTasks = [];\n\n  for (let i = 0; i < stagesNames.length; ++i) {\n    stagesTasks.push([]);\n  }\n\n  for (let task of tasks) {\n    const stageId = task.stage;\n    stagesTasks[stageId].push(task);\n  } // --- Handle Create Task --- //\n\n\n  const handleCreateTask = e => {\n    e.preventDefault();\n\n    if (inputTask !== \"\") {\n      setTasks([...tasks, {\n        name: inputTask,\n        stage: 0\n      }]);\n    }\n  }; // --- Handle Delete Task --- //\n\n\n  const handleDeleteTask = (e, index) => {\n    tasks.splice(index, 1);\n    setTasks([...tasks]);\n  }; // --- Handle Arrow Forward --- //\n\n\n  const handleArrowForward = (e, index) => {\n    tasks[index].stage += 1;\n    setTasks([...tasks]);\n  }; // --- Handle Arrow Backward --- //\n\n\n  const handleArrowBackward = (e, index) => {\n    tasks[index].stage -= 1;\n    setTasks([...tasks]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"New task name\",\n    value: inputTask,\n    onChange: e => setInputTask(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleCreateTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Create task\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-50 layout-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, stagesTasks.map((tasks, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n      \"data-testid\": `stage-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }\n    }, tasks.map((task, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"slide-up-fade-in\",\n        key: `${i}${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"li-content layout-row justify-content-between align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, task.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"icon-only x-small mx-2\",\n        \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n        onClick: e => handleArrowBackward(e, index),\n        disabled: task.stage === 0 ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"icon-only x-small mx-2\",\n        \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n        onClick: e => handleArrowForward(e, index),\n        disabled: task.stage === 3 ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"icon-only danger x-small mx-2\",\n        \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n        onClick: e => handleDeleteTask(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }\n      }, \"delete\")))));\n    }))));\n  })));\n};\n\nexport default KanbanBoard;","map":{"version":3,"sources":["C:/Users/HP/Downloads/New folder (2)/kanban-board-main/src/components/kanban-board/index.js"],"names":["React","useState","KanbanBoard","inputTask","setInputTask","tasks","setTasks","name","stage","stagesNames","stagesTasks","i","length","push","task","stageId","handleCreateTask","e","preventDefault","handleDeleteTask","index","splice","handleArrowForward","handleArrowBackward","target","value","map","split","join"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst KanbanBoard = () => {\n\n  // Each task is uniquely identified by its name. \n  // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n  \n  const [inputTask, setInputTask] = useState(\"\")\n\n  const [tasks, setTasks] = useState([\n    { name: '1', stage: 0 },\n    { name: '2', stage: 0 }\n  ])\n\n  const stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Done'];\n\n  let stagesTasks = [];\n  for (let i = 0; i < stagesNames.length; ++i) {\n    stagesTasks.push([]);\n  }\n  for (let task of tasks) {\n    const stageId = task.stage;\n    stagesTasks[stageId].push(task);\n  }\n\n  // --- Handle Create Task --- //\n  const handleCreateTask = (e) => {\n    e.preventDefault();\n    if(inputTask !== \"\") {\n      setTasks([...tasks, { name: inputTask, stage: 0}])\n    }\n  }\n\n  // --- Handle Delete Task --- //\n  const handleDeleteTask = (e, index) => {\n    tasks.splice(index, 1);\n    setTasks([...tasks])\n  }\n\n  // --- Handle Arrow Forward --- //\n  const handleArrowForward = (e, index) => {\n    tasks[index].stage += 1\n    setTasks([...tasks])\n  }\n\n  // --- Handle Arrow Backward --- //\n  const handleArrowBackward = (e, index) => {\n    tasks[index].stage -= 1\n    setTasks([...tasks])\n  }\n\n  return (\n    <div >\n      <section >\n        <input  type=\"text\"  placeholder=\"New task name\"  value={inputTask} onChange={(e) => setInputTask(e.target.value)} />\n        <button type=\"submit\"   onClick={handleCreateTask}>Create task</button>\n      </section>\n\n      <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n              return (\n                  <div  >\n                      <div className=\"card-text\">\n                          <h4>{stagesNames[i]}</h4>\n                          <ul  data-testid={`stage-${i}`}>\n                              {tasks.map((task, index) => {\n                                return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                                  <div className=\"li-content layout-row justify-content-between align-items-center\">\n                                    <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                                    <div className=\"icons\">\n                                      <button \n                                        className=\"icon-only x-small mx-2\" \n                                        data-testid={`${task.name.split(' ').join('-')}-back`} \n                                        onClick={(e) => handleArrowBackward(e, index)}\n                                        disabled={task.stage === 0 ? true : false}>\n                                        <i className=\"material-icons\">arrow_back</i>\n                                      </button>\n                                      <button \n                                        className=\"icon-only x-small mx-2\" \n                                        data-testid={`${task.name.split(' ').join('-')}-forward`} \n                                        onClick={(e) => handleArrowForward(e, index)}\n                                        disabled={task.stage === 3 ? true : false}>\n                                        <i className=\"material-icons\">arrow_forward</i>\n                                      </button>\n                                      <button className=\"icon-only danger x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`} onClick={(e) => handleDeleteTask(e, index)}>\n                                        <i className=\"material-icons\">delete</i>\n                                      </button>\n                                    </div>\n                                  </div>\n                                </li>\n                              })}\n                          </ul>\n                      </div>\n                  </div>\n              )\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default KanbanBoard;"]},"metadata":{},"sourceType":"module"}